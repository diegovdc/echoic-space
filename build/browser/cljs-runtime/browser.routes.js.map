{"version":3,"sources":["browser/routes.cljs"],"mappings":";AAcA,AAAKA,uBAAM,gDAAA,hDAACC;AAEZ,wBAAA,mFAAA,mFAAA,IAAA,2CAAA,qDAAA,+EAAA,qDAAA,taAAKG;AAAL,AAC6B,OAACC;mBAD9B,mFAAA,UAAA,2CAAA,qDAAA,kFAAA,qDAAA;AAAA,AAEoC,OAACC;mBAFrC,mFAAA,gBAAA,2CAAA,qDAAA,iGAAA,qDAAA,WAAAJ;AAAA,AAI2B,IAAMK,OAAK,AAAA,mFAAA,AAAA,mFAAA,AAAA,gGAAAL;AAAX,AACE,oEAAA,7DAACM,gCAAkBC,wBAAUF;GAL1D,kEAAA,2CAAA,qDAAA,2CAAA,6GAAA,mFAAA,UAAA,2CAAA,qDAAA,iFAAA,qDAAA,3XAM8CG;AAN9C,AAOoC,OAACC,yBAAWF;mBAPhD,mFAAA,eAAA,2CAAA,qDAAA,6FAAA,qDAAA,WAAAN;AAAA,AAS2B,IAAMI,OAAK,AAAA,mFAAA,AAAA,mFAAA,AAAA,gGAAAJ;AAAX,AACE,oEAAA,7DAACK,gCAAkBC,wBAAUF;GAV1D,kEAAA,2CAAA,qDAAA,2CAAA,6GAAA,mFAAA,SAAA,2CAAA,qDAAA,gFAAA,qDAAA,zXAW8CG;AAX9C,AAYkC,OAACE,wBAAUH;mBAZ7C,mFAAA,YAAA,2CAAA,qDAAA,qFAAA,qDAAA;AAAA,AAawC,OAACI,2BAAaJ;mBAbtD,mFAAA,iBAAA,2CAAA,qDAAA,gGAAA,qDAAA;AAAA,AAckD,OAACK,gCAAkBL;;AAErE,sBAAA,tBAAMM;AAAN,AACE,2FAAA,3FAACC,mDAAMP,wBAAUQ,iFAAkBC;;AACnC,OAACC,iCACA,2EAAA,2CAAA,qDAAA,2CAAA,tNAACC,qDAAUhB,6NAAyBiB,+CACpC,WAAKC;AAAL,AACE,YAAA,ZAACC,qBAAwBD;;AACzB,kGAAA,iVAAA,nbAACN,0DAAMP,wBAAUQ,oEAAY,gDAAA,eAAA,AAAA,mFAAA,AAAA,mFAAIK,rLAAcE,hDAAKC,mVACtCH;;AACd,OAACI,sBAAO1B,qBAAMsB;GANjB,2CAAA,sEAAA","names":["browser.routes/match","reagent.core.atom","p1__37243#","p1__37244#","browser.routes/routes","browser.views.home/main","browser.views.about/main","slug","browser.views.music-single/main","browser.state/app-state","cljs.core/string?","browser.views.music/main","browser.views.blog/main","browser.views.contact/main","browser.views.mailing-list/main","browser.routes/init","cljs.core.swap_BANG_","cljs.core/assoc","reitit.frontend.easy/href","reitit.frontend.easy/start!","reitit.frontend.router","reitit.coercion.spec/coercion","m","js/console.log","cljs.core/name","cljs.core.keyword","cljs.core/reset!"],"sourcesContent":["(ns browser.routes\n  (:require [browser.state :refer [app-state]]\n            [browser.views.about :as about]\n            [browser.views.blog :as blog]\n            [browser.views.contact :as contact]\n            [browser.views.home :as home]\n            [browser.views.mailing-list :as mailing-list]\n            [browser.views.music :as music]\n            [browser.views.music-single :as music-single]\n            [reagent.core :as r]\n            [reitit.coercion.spec :as rss]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]))\n\n(def match (r/atom nil))\n\n(def routes\n  [[\"/\" {:name ::home :view #(home/main)}]\n   [\"/about/\" {:name ::about :view #(about/main)}]\n   [\"/music/:slug/\" {:name ::music-single\n                    :view #(let [slug (-> %1 :parameters :path :slug)]\n                             (music-single/main app-state slug nil))\n                    :parameters {:path {:slug string?}}}]\n   [\"/music/\" {:name ::music :view #(music/main app-state)}]\n   [\"/blog/:slug/\" {:name ::blog-single\n                    :view #(let [slug (-> %1 :parameters :path :slug)]\n                             (music-single/main app-state slug nil))\n                    :parameters {:path {:slug string?}}}]\n   [\"/blog/\" {:name ::blog :view #(blog/main app-state)}]\n   [\"/contact/\" {:name ::contact :view #(contact/main app-state)}]\n   [\"/mailing-list/\" {:name ::mailing-list :view #(mailing-list/main app-state)}]])\n\n(defn init []\n  (swap! app-state assoc :routing-fn rfe/href)\n  (rfe/start!\n   (rf/router routes {:data {:coercion rss/coercion}})\n   (fn [m]\n     (js/console.log \"router\" m)\n     (swap! app-state assoc :page (-> m :data :name name keyword)\n            :route m)\n     (reset! match m))\n   ;; set to false to enable HistoryAPI\n   {:use-fragment false}))\n"]}