{
"version":3,
"file":"module$node_modules$axios$lib$core$dispatchRequest.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/G,IAAIC,MAAQH,OAAA,CAAQ,qCAAR,CAAZ,CACII,cAAgBJ,OAAA,CAAQ,kDAAR,CADpB,CAEIK,SAAWL,OAAA,CAAQ,+CAAR,CAFf,CAGIM,SAAWN,OAAA,CAAQ,wCAAR,CAiBfC,OAAOC,CAAAA,OAAP,CAAiBK,QAAwB,CAACC,MAAD,CAAS,CACnBA,MAZlBC,CAAAA,WAAX,EAY6BD,MAXpBC,CAAAA,WAAYC,CAAAA,gBAAnB,EAcFF,OAAOG,CAAAA,OAAP,CAAiBH,MAAOG,CAAAA,OAAxB,EAAmC,EAGnCH,OAAOI,CAAAA,IAAP,CAAcR,aAAA,CACZI,MAAOI,CAAAA,IADK;AAEZJ,MAAOG,CAAAA,OAFK,CAGZH,MAAOK,CAAAA,gBAHK,CAOdL,OAAOG,CAAAA,OAAP,CAAiBR,KAAMW,CAAAA,KAAN,CACfN,MAAOG,CAAAA,OAAQI,CAAAA,MADA,EACU,EADV,CAEfP,MAAOG,CAAAA,OAAP,CAAeH,MAAOQ,CAAAA,MAAtB,CAFe,EAEkB,EAFlB,CAGfR,MAAOG,CAAAA,OAHQ,CAMjBR,MAAMc,CAAAA,OAAN,CACE,uCAAA,CAAA,KAAA,CAAA,GAAA,CADF,CAEEC,QAA0B,CAACF,MAAD,CAAS,CACjC,OAAOR,MAAOG,CAAAA,OAAP,CAAeK,MAAf,CAD0B,CAFrC,CASA,OAAO,CAFOR,MAAOW,CAAAA,OAEd,EAFyBb,QAASa,CAAAA,OAElC,EAAQX,MAAR,CAAgBY,CAAAA,IAAhB,CAAqBC,QAA4B,CAACC,QAAD,CAAW,CACpCd,MAzCpBC,CAAAA,WAAX,EAyC+BD,MAxCtBC,CAAAA,WAAYC,CAAAA,gBAAnB,EA2CAY,SAASV,CAAAA,IAAT,CAAgBR,aAAA,CACdkB,QAASV,CAAAA,IADK,CAEdU,QAASX,CAAAA,OAFK,CAGdH,MAAOe,CAAAA,iBAHO,CAMhB,OAAOD,SAV0D,CAA5D,CAWJE,QAA2B,CAACC,MAAD,CAAS,CAChCpB,QAAA,CAASoB,MAAT,CAAL;CAC+BjB,MArDtBC,CAAAA,WAwDP,EAH6BD,MApDxBC,CAAAA,WAAYC,CAAAA,gBAAnB,EAuDE,CAAIe,MAAJ,EAAcA,MAAOH,CAAAA,QAArB,GACEG,MAAOH,CAAAA,QAASV,CAAAA,IADlB,CACyBR,aAAA,CACrBqB,MAAOH,CAAAA,QAASV,CAAAA,IADK,CAErBa,MAAOH,CAAAA,QAASX,CAAAA,OAFK,CAGrBH,MAAOe,CAAAA,iBAHc,CADzB,CAJF,CAaA,OAAOG,QAAQC,CAAAA,MAAR,CAAeF,MAAf,CAd8B,CAXhC,CA7ByC,CAvB6D;",
"sources":["node_modules/axios/lib/core/dispatchRequest.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$core$dispatchRequest\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","transformData","isCancel","defaults","module.exports","config","cancelToken","throwIfRequested","headers","data","transformRequest","merge","common","method","forEach","cleanHeaderConfig","adapter","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","Promise","reject"]
}
