shadow$provide.module$node_modules$axios$lib$core$mergeConfig=function(global,require,module,exports){var utils=require("module$node_modules$axios$lib$utils");module.exports=function(config1,config2){function getMergedValue(target,source){return utils.isPlainObject(target)&&utils.isPlainObject(source)?utils.merge(target,source):utils.isPlainObject(source)?utils.merge({},source):utils.isArray(source)?source.slice():source}function mergeDeepProperties(prop){utils.isUndefined(config2[prop])?utils.isUndefined(config1[prop])||
(config[prop]=getMergedValue(void 0,config1[prop])):config[prop]=getMergedValue(config1[prop],config2[prop])}config2=config2||{};var config={},valueFromConfig2Keys=["url","method","data"],mergeDeepPropertiesKeys=["headers","auth","proxy","params"],defaultToConfig2Keys="baseURL transformRequest transformResponse paramsSerializer timeout timeoutMessage withCredentials adapter responseType xsrfCookieName xsrfHeaderName onUploadProgress onDownloadProgress decompress maxContentLength maxBodyLength maxRedirects transport httpAgent httpsAgent cancelToken socketPath responseEncoding".split(" "),
directMergeKeys=["validateStatus"];utils.forEach(valueFromConfig2Keys,function(prop){utils.isUndefined(config2[prop])||(config[prop]=getMergedValue(void 0,config2[prop]))});utils.forEach(mergeDeepPropertiesKeys,mergeDeepProperties);utils.forEach(defaultToConfig2Keys,function(prop){utils.isUndefined(config2[prop])?utils.isUndefined(config1[prop])||(config[prop]=getMergedValue(void 0,config1[prop])):config[prop]=getMergedValue(void 0,config2[prop])});utils.forEach(directMergeKeys,function(prop){prop in
config2?config[prop]=getMergedValue(config1[prop],config2[prop]):prop in config1&&(config[prop]=getMergedValue(void 0,config1[prop]))});var axiosKeys=valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);valueFromConfig2Keys=Object.keys(config1).concat(Object.keys(config2)).filter(function(key){return-1===axiosKeys.indexOf(key)});utils.forEach(valueFromConfig2Keys,mergeDeepProperties);return config}}
//# sourceMappingURL=module$node_modules$axios$lib$core$mergeConfig.js.map
