{
"version":3,
"file":"module$node_modules$axios$lib$axios.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAehGC,QAASA,eAAc,CAACC,aAAD,CAAgB,CACjCC,aAAAA,CAAU,IAAIC,KAAJ,CAAUF,aAAV,CACd,KAAIG,SAAWC,IAAA,CAAKF,KAAMG,CAAAA,SAAUC,CAAAA,OAArB,CAA8BL,aAA9B,CAGfM,MAAMC,CAAAA,MAAN,CAAaL,QAAb,CAAuBD,KAAMG,CAAAA,SAA7B,CAAwCJ,aAAxC,CAGAM,MAAMC,CAAAA,MAAN,CAAaL,QAAb,CAAuBF,aAAvB,CAEA,OAAOE,SAV8B,CAZvC,IAAII,MAAQX,OAAA,CAAQ,qCAAR,CAAZ,CACIQ,KAAOR,OAAA,CAAQ,4CAAR,CADX,CAEIM,MAAQN,OAAA,CAAQ,0CAAR,CAFZ;AAGIa,YAAcb,OAAA,CAAQ,gDAAR,CACdc,OAAAA,CAAWd,OAAA,CAAQ,wCAAR,CAsBf,KAAIe,MAAQZ,cAAA,CAAeW,MAAf,CAGZC,MAAMT,CAAAA,KAAN,CAAcA,KAGdS,MAAMC,CAAAA,MAAN,CAAeC,QAAe,CAACC,cAAD,CAAiB,CAC7C,MAAOf,eAAA,CAAeU,WAAA,CAAYE,KAAMD,CAAAA,QAAlB,CAA4BI,cAA5B,CAAf,CADsC,CAK/CH,MAAMI,CAAAA,MAAN,CAAenB,OAAA,CAAQ,6CAAR,CACfe,MAAMK,CAAAA,WAAN,CAAoBpB,OAAA,CAAQ,kDAAR,CACpBe,MAAMM,CAAAA,QAAN,CAAiBrB,OAAA,CAAQ,+CAAR,CAGjBe;KAAMO,CAAAA,GAAN,CAAYC,QAAY,CAACC,QAAD,CAAW,CACjC,MAAOC,QAAQH,CAAAA,GAAR,CAAYE,QAAZ,CAD0B,CAGnCT,MAAMW,CAAAA,MAAN,CAAe1B,OAAA,CAAQ,8CAAR,CAGfe,MAAMY,CAAAA,YAAN,CAAqB3B,OAAA,CAAQ,oDAAR,CAErBC,OAAOC,CAAAA,OAAP,CAAiBa,KAGjBd,OAAOC,CAAAA,OAAQ0B,CAAAA,OAAf,CAAyBb,KAxDuE;",
"sources":["node_modules/axios/lib/axios.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$axios\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createInstance","defaultConfig","context","Axios","instance","bind","prototype","request","utils","extend","mergeConfig","defaults","axios","create","axios.create","instanceConfig","Cancel","CancelToken","isCancel","all","axios.all","promises","Promise","spread","isAxiosError","default"]
}
