{
"version":3,
"file":"module$node_modules$axios$lib$adapters$xhr.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/axios/lib/adapters/xhr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$adapters$xhr\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","module.exports","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","request.onreadystatechange","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseData","responseText","statusText","onabort","request.onabort","onerror","request.onerror","ontimeout","request.ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"]
}
