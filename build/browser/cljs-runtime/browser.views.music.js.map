{"version":3,"sources":["browser/views/music.cljs"],"mappings":";AAKA,AAAKA,0CAAoB,gDAAA,hDAACC;AAE1B,uCAAA,vCAAMC,sFAAkBC;AAAxB,AACE,IAAMC,QAAM,AAAA,sFAAQD;IACdE,OAAK,AAAA,mFAAOF;AADlB,4DAKO,4CAAA,WAAAO,vDAACC,5DAKD,OAACI,+CAAOX;AALR,AACE,yDAAAM,iBAAA,mFAAA,gEAAA,tNAACE,2RAGA,WAAKC;AAAL,AAAU,wDAAA,jDAACC,6CAAKD;;GANnB,+CAAA,WAAAP,1DAACC;AAAD,AAAS,IAAAC,mBAAI,+CAAAF,iBAAA,mFAAA,gEAAA,nNAACG;AAAL,AAAA,oBAAAD;AAAAA;;AACI,sDAAAF,iBAAA,mFAAA,gEAAA,nNAACG;;GAFdJ;;AAUT,2BAAA,3BAAMW,8DAAMb;AAAZ,AACE,IAAMC,QAAM,4CAAA,WAAAa,vDAACN;AAAD,AAAM,OAAA,8FAAAM;GAAgB,qCAAA,AAAAC,rCAAChB,qDAAkBC;IAC/CgB,aAAW,AAACC,cAAI,AAACC,6CAAK,AAACC,kBAAQ,4CAAA,WAAAC,vDAACZ;AAAD,AAAM,OAAA,2FAAAY;GAAcnB;IACnDoB,gBAAW,WAAKC;AAAL,AAAW,IAAAC,WACA,kBAAI,eAAA,WAAAG,1BAACC;AAAD,AAAO,oDAAA,gBAAAD,7DAACE;sGAAZ,6FAAA,hMAA6B,AAAA,2FAAWN;IADxCE,WAAA,2CAAA,qDAIO,AAAA,mFAAOF;IAJdG,eAAC,AAAA,+FAAA,AAAAV,gBAAcf;AAAf,AAAA,QAAAyB,6CAAAA,2CAAAF,SAAAC,YAAAC,uBAAAF,SAAAC;;AAF5B,AAOE,+CAAA,cAAA,mFAAA,8IAAA,mFAAA,1WAACK,4LAGC,AAACC,uCAAiBjC,wCAAoBmB,kJAErC,AAACe,8CAAM,AAACvB,4CAAI,WAAKwB;AAAL,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,wBAAA,+EAAA,mFAAA,iDAAA,2CAAA,wDAAA,iDAAA,mFAAA,mDAAA,2CAAA,wDAAA,5hBAC6C,AAACC,gBAAMD,wQACrB,AAACC,gBAAMD,yQAElC,AAACD,8CACA,AAACvB,4CACA,AAAC0B,gDAAQC,wCAAkBd,eAC3B,AAACe,iBAAOJ;GACd,AAACK,mCAAmB,8CAAA,AAAAtB,9CAACuB,8DAA+BzC,yCAAoBI","names":["browser.views.music/selected-categories","reagent.core.atom","browser.views.music/merge-blog-music","app-state","music","blog","p1__33770#","cljs.core.filter","or__5045__auto__","cljs.core.get_in","p1__33772#","cljs.core.map","cljs.core.update_in","col","cljs.core.conj","cljs.core.concat","browser.views.music/main","p1__33773#","cljs.core/deref","categories","cljs.core/set","cljs.core.sort","cljs.core/flatten","p1__33774#","post->href","post","G__33777","G__33778","fexpr__33776","p1__33775#","cljs.core/some","cljs.core._EQ_","browser.views.helpers/make-archive-page","browser.views.helpers/print-categories","cljs.core.doall","m","cljs.core/first","cljs.core.partial","browser.views.helpers/make-archive-item","cljs.core/second","browser.helpers/sort-entry-by-year","browser.helpers/filter-by-selected-categories"],"sourcesContent":["(ns browser.views.music\n  (:require [browser.views.helpers :refer [make-archive-page make-archive-item print-categories]]\n            [browser.helpers :refer [maybe-make-audio-url year sort-entry-by-year filter-by-selected-categories toggle-category]]\n            [reagent.core :as r]))\n\n(def selected-categories (r/atom []))\n\n(defn merge-blog-music [app-state]\n  (let [music (:music app-state)\n        blog (:blog app-state)]\n    (->> blog\n         (filter #(or (get-in % [:attributes :file_name])\n                      (get-in % [:attributes :include_in_music_archive])))\n         (map\n          #(update-in\n            %\n            [:attributes :category]\n            (fn [col] (conj col \"Bit\u00e1cora\"))))\n         (concat music))))\n\n(defn main [app-state]\n  (let [music (map #(:attributes %) (merge-blog-music @app-state))\n        categories (set (sort (flatten (map #(:category %) music))))\n        post->href (fn [post] ((:routing-fn @app-state)\n                              (if (some #(=  \"Bit\u00e1cora\" %) (:category post))\n                                :browser.routes/blog-single\n                                :browser.routes/music-single)\n                              {:slug (:slug post)}))]\n    (make-archive-page\n     \"M\u00fasica\"\n     [:div\n      (print-categories selected-categories categories)\n      [:div\n       (doall (map (fn [m]\n                     [:div {:class \"music__year-container\" :key (first m)}\n                      [:h2 {:class \"music__year\"} (first m)] ; prints year\n                      [:div {:class \"music-work\"}; prints work\n                       (doall\n                        (map\n                         (partial make-archive-item post->href)\n                         (second m)))]])\n                   (sort-entry-by-year (filter-by-selected-categories @selected-categories music))))]])))\n"]}